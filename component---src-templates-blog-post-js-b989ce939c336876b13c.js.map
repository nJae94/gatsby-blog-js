{"version":3,"sources":["webpack:///./src/layout/postLayout.js","webpack:///./src/components/tableOfContents/index.js","webpack:///./src/templates/blog-post.js"],"names":["PostLayout","location","title","children","style","marginTop","TableOfContents","item","currentHeaderUrl","Item","useMemo","replace","className","dangerouslySetInnerHTML","__html","BlogPostTemplate","data","pageContext","post","markdownRemark","metaData","site","siteMetadata","siteUrl","author","sponsor","frontmatter","postTitle","date","useState","undefined","currentUrl","setCurrentUrl","console","log","tableOfContents","useEffect","handleScroll","aboveHeaderUrl","currentOffsetY","window","pageYOffset","headerElements","document","querySelectorAll","el","elTop","getBoundingClientRect","top","isLast","length","split","origin","href","addEventListener","removeEventListener","html","pageQuery"],"mappings":"gPAoBiBA,G,UAfE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAEnC,OACA,oCACI,kBAAC,IAAD,CACID,MAAOA,EACPD,SAAUA,IAEd,yBAAKG,MAAO,CAACC,UAAU,SACnB,8BAAOF,O,UCTJ,SAASG,EAAT,GAAoD,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,iBAErCC,EAAOC,mBAAQ,WAEjB,OAAIF,EAEOD,EAAKI,QAAL,IACCH,EADD,QAECA,EAFD,qBAKAD,IAEb,CAACC,IAGH,OAAOD,EAEP,yBAAKK,UAAU,QACH,yBACAA,UAAU,MACVC,wBAAyB,CAAEC,OAAQL,MAI7C,K,k0BCyDSM,UAjFU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAkBf,GAAe,EAA3BgB,YAA2B,EAAfhB,UACtCiB,EAAOF,EAAKG,eACZC,EAAWJ,EAAKK,KAAKC,aAFgC,GAGfF,EAApClB,MAAoCkB,EAA7BG,QAA6BH,EAApBI,OAAoBJ,EAAZK,QACGP,EAAKQ,aAAzBC,EAJ4C,EAInDzB,MAJmD,KAIjC0B,KAEUC,wBAASC,IAAtCC,EANoD,KAMxCC,EANwC,KAmD3D,OA3CAC,QAAQC,IAAIlB,EAAKG,eAAegB,iBAEhCC,qBAAU,WAER,IAAMC,EAAe,WAQnB,IANA,IAAIC,EAMJ,EAJMC,EAAiBC,OAAOC,YAExBC,EAAiBC,SAASC,iBAAT,kBAEvB,IAAgBF,KAAhB,aAAgC,CAAC,IAAvBG,EAAsB,QAIxBC,EAFQD,EAAGE,wBAAVC,IAEaT,EAEdU,EAASJ,IAAOH,EAAeA,EAAeQ,OAAO,GAE3D,GAAGX,EAAiBO,EAAM,IAAK,CAC7BR,GACEN,EAAcM,EAAea,MAAMlD,EAASmD,QAAQ,KACrDd,GAAkBN,OAAcF,GACjC,MAIAmB,GAAUjB,EAAca,EAAGQ,KAAKF,MAAMlD,EAASmD,QAAQ,KACtDH,IAAWX,EAAiBO,EAAGQ,QAQtC,OAFAb,OAAOc,iBAAiB,SAAUjB,GAE3B,WACLG,OAAOe,oBAAoB,SAAUlB,MAGvC,IAGA,kBAAC,EAAD,CAAYpC,SAAUA,EAAUC,MAAOyB,GAErC,yBAAKf,UAAU,eACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,kBACb,4BAAKe,GACL,yBAAKf,UAAU,mBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACf,kBAACN,EAAD,CACEC,KAAOS,EAAKG,eAAegB,gBAC3B3B,iBAAkBuB,QAQ1B,yBAAKnB,UAAU,eAAeC,wBAAyB,CAAEC,OAAQI,EAAKsC,YAvEhF,IAmFaC,EAAS","file":"component---src-templates-blog-post-js-b989ce939c336876b13c.js","sourcesContent":["import React from \"react\";\r\nimport {Header} from '../components/header';\r\n\r\nimport './index.scss'\r\n\r\nconst PostLayout = ({ location, title, children }) => {\r\n\r\n    return (\r\n    <>\r\n        <Header\r\n            title={title}\r\n            location={location}\r\n        />\r\n        <div style={{marginTop:'5rem'}} >\r\n            <main>{children}</main>\r\n        </div>\r\n    </>\r\n    )\r\n  }\r\n  \r\n  export default PostLayout","import React, {useMemo} from 'react';\r\n\r\nimport './index.scss';\r\n\r\n\r\nexport default function TableOfContents({item, currentHeaderUrl}) {\r\n    \r\n    const Item = useMemo(()=>{\r\n\r\n        if (currentHeaderUrl) {\r\n\r\n            return item.replace(\r\n                `\"${currentHeaderUrl}\"`,\r\n                `\"${currentHeaderUrl}\" class=\"current\"`\r\n            );\r\n        } else {\r\n            return item;\r\n        }\r\n    },[currentHeaderUrl]);\r\n\r\n\r\n    return item ? (\r\n\r\n    <div className=\"menu\">\r\n                <div \r\n                className=\"toc\"\r\n                dangerouslySetInnerHTML={{ __html: Item }}>\r\n                </div>\r\n    </div>\r\n    ) \r\n    : null\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport PostLayout from \"../layout/postLayout\";\r\nimport TableOfContents from \"../components/tableOfContents\";\r\n\r\n\r\nconst BlogPostTemplate = ({ data, pageContext,location }) => {\r\n  const post = data.markdownRemark\r\n  const metaData = data.site.siteMetadata\r\n  const { title, siteUrl, author, sponsor } = metaData\r\n  const { title: postTitle, date } = post.frontmatter\r\n\r\n  const [currentUrl, setCurrentUrl] = useState(undefined);\r\n\r\n  console.log(data.markdownRemark.tableOfContents);\r\n\r\n  useEffect(()=> {\r\n    \r\n    const handleScroll = () => {\r\n      \r\n      let aboveHeaderUrl;\r\n\r\n      const currentOffsetY = window.pageYOffset;\r\n\r\n      const headerElements = document.querySelectorAll(`.anchor-header`);\r\n\r\n      for(const el of headerElements) {\r\n\r\n        const {top} = el.getBoundingClientRect();\r\n\r\n        const elTop = top + currentOffsetY;\r\n\r\n        const isLast = el === headerElements[headerElements.length-1];\r\n\r\n        if(currentOffsetY < elTop-100) {\r\n          aboveHeaderUrl && \r\n            setCurrentUrl(aboveHeaderUrl.split(location.origin)[1]);\r\n          !aboveHeaderUrl && setCurrentUrl(undefined);\r\n          break;\r\n        }\r\n        else\r\n        {\r\n          isLast && setCurrentUrl(el.href.split(location.origin)[1]);\r\n          !isLast && (aboveHeaderUrl = el.href);\r\n        }\r\n\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    }\r\n\r\n  },[]);\r\n  \r\n  return (\r\n    <PostLayout location={location} title={postTitle}>\r\n      {/* <div className=\"post-Wapper\" dangerouslySetInnerHTML={{ __html: post.html }} /> */}\r\n      <div className=\"post-Wapper\">\r\n        <div className=\"content\">\r\n          <div className=\"header-wrapper\">\r\n            <h1>{postTitle}</h1>\r\n            <div className=\"summary-wrapper\">\r\n              <div className=\"summary\">\r\n                <div className=\"info\">\r\n                <TableOfContents \r\n                  item ={data.markdownRemark.tableOfContents}\r\n                  currentHeaderUrl={currentUrl}\r\n                />\r\n                </div>\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: post.html }}>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </PostLayout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\nquery BlogPostBySlug($slug: String!) {\r\n  site {\r\n    siteMetadata {\r\n      title\r\n      author {\r\n        name\r\n      }\r\n      siteUrl\r\n    }\r\n  }\r\n  markdownRemark(fields: { slug: { eq: $slug } }) {\r\n    id\r\n    excerpt(pruneLength: 280)\r\n    html\r\n    tableOfContents\r\n    frontmatter {\r\n      title\r\n      date(formatString: \"MMMM DD, YYYY\")\r\n    }\r\n  }\r\n}\r\n`\r\n"],"sourceRoot":""}
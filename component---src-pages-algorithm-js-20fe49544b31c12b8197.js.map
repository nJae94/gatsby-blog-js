{"version":3,"sources":["webpack:///./src/pages/algorithm.js"],"names":["data","location","posts","site","siteMetadata","title","allMarkdownRemark","nodes","useState","algorithm","setAlgorithm","tag","setTag","tags","useMemo","map","post","frontmatter","category","console","log","useEffect","filter","pathname","split","Wrapper","setTags","length","fields","slug","key","styled","div","pageQuery"],"mappings":"wPASe,sBAAyB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAEhBC,GADY,UAAAF,EAAKG,KAAKC,oBAAV,SAAwBC,MAC5BL,EAAKM,kBAAkBC,OAFA,EAIHC,mBAAS,IAApCC,EAJ8B,KAInBC,EAJmB,OAMfF,mBAAS,OAAxBG,EAN8B,KAMzBC,EANyB,KAQ/BC,EAAOC,mBACX,kBACE,IACEZ,EAAMa,KACJ,SAAAC,GAAI,MAC4B,cAA9BA,EAAKC,YAAYC,UAA4BF,EAAKC,YAAYN,UAGtE,IAiBF,OAdAQ,QAAQC,IAAIP,GAEZQ,qBAAU,WACRX,EACU,QAARC,EACIT,EAAMoB,QAAO,SAAAN,GAAI,MAAkC,cAA9BA,EAAKC,YAAYC,YACtChB,EAAMoB,QACJ,SAAAN,GAAI,MAC4B,cAA9BA,EAAKC,YAAYC,UACjBF,EAAKC,YAAYN,MAAQA,QAGlC,CAACT,EAAOS,IAGT,kBAAC,IAAD,CAAQV,SAAUA,EAAUI,MAAOJ,EAASsB,SAASC,MAAM,KAAK,IAC9D,kBAAC,IAAD,CAAKnB,MAAM,oBAEX,kBAACoB,EAAD,MACe,IAAZZ,EAAK,IAAgB,kBAAC,IAAD,CAAKA,KAAMA,EAAMa,QAASd,IAC/CH,EAAUkB,OAAS,EAClBlB,EAAUM,KAAI,SAAAC,GACZ,IAAMX,EAAQW,EAAKC,YAAYZ,OAASW,EAAKY,OAAOC,KAEpD,OAAO,kBAAC,IAAD,CAAaC,IAAKzB,EAAOA,MAAOA,EAAOW,KAAMA,OAGtD,8CAOV,IAAMS,EAAUM,IAAOC,IAAV,qEAAGD,CAAH,sEAOAE,EAAS","file":"component---src-pages-algorithm-js-20fe49544b31c12b8197.js","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../layout\"\nimport SEO from \"../components/seo\"\nimport styled from \"styled-components\"\nimport MainContent from \"../components/maincontent\"\nimport Tag from \"../components/tag\"\nimport _ from \"lodash\"\n\nexport default ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  const [algorithm, setAlgorithm] = useState([])\n\n  const [tag, setTag] = useState(\"all\")\n\n  const tags = useMemo(\n    () =>\n      _.uniq(\n        posts.map(\n          post =>\n            post.frontmatter.category === \"algorithm\" && post.frontmatter.tag\n        )\n      ),\n    []\n  )\n\n  console.log(tags)\n\n  useEffect(() => {\n    setAlgorithm(\n      tag === \"all\"\n        ? posts.filter(post => post.frontmatter.category === \"algorithm\")\n        : posts.filter(\n            post =>\n              post.frontmatter.category === \"algorithm\" &&\n              post.frontmatter.tag === tag\n          )\n    )\n  }, [posts, tag])\n\n  return (\n    <Layout location={location} title={location.pathname.split(\"/\")[1]}>\n      <SEO title=\"algorithm posts\" />\n      {/* <Tag/> */}\n      <Wrapper>\n        {tags[0] !== false && <Tag tags={tags} setTags={setTag} />}\n        {algorithm.length > 0 ? (\n          algorithm.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return <MainContent key={title} title={title} post={post} />\n          })\n        ) : (\n          <div>게시글이 없습니다.</div>\n        )}\n      </Wrapper>\n    </Layout>\n  )\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          category\n          tag\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
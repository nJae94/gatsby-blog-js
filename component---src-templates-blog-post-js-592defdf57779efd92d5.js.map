{"version":3,"sources":["webpack:///./src/layout/index.js","webpack:///./src/components/tableOfContents/index.js","webpack:///./src/components/navigator/index.js","webpack:///./src/components/utterances/index.js","webpack:///./src/templates/blog-post.js"],"names":["Layout","location","title","children","useState","show","setShow","prev","useEffect","Scroll","curScrollY","window","pageYOffset","document","addEventListener","removeEventListener","Fragment","rootPath","className","style","marginTop","Date","getFullYear","href","TableOfContents","item","currentHeaderUrl","Item","useMemo","replace","dangerouslySetInnerHTML","__html","Navigator","pageContext","previous","next","to","fields","slug","rel","frontmatter","Utterances","repo","rootElm","React","createRef","isDarkTheme","Dom","utterances","createElement","utterancesConfig","src","branch","theme","label","async","crossorigin","Object","keys","forEach","configKey","setAttribute","current","appendChild","ref","BlogPostTemplate","data","post","markdownRemark","site","siteMetadata","postTitle","date","undefined","currentUrl","setCurrentUrl","handleScroll","aboveHeaderUrl","currentOffsetY","headerElements","querySelectorAll","el","elTop","getBoundingClientRect","top","isLast","length","split","origin","tableOfContents","html","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-592defdf57779efd92d5.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Header } from \"../components/header\"\n\nimport \"./index.scss\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n\n  const [show, setShow] = useState(true)\n\n  const [prev, setPrev] = useState(0)\n\n  useEffect(() => {\n    const Scroll = () => {\n      const curScrollY = window.pageYOffset\n\n      if (curScrollY > 80 && prev < curScrollY) {\n        setShow(false)\n      } else {\n        setShow(true)\n      }\n    }\n\n    document.addEventListener(\"scroll\", Scroll)\n\n    return () => {\n      document.removeEventListener(\"scroll\", Scroll)\n    }\n  }, [prev])\n\n  return (\n    <React.Fragment>\n      <Header\n        title={title}\n        location={location}\n        rootPath={rootPath}\n        show={show}\n      />\n\n      <div className={\"global-wrapper\"} style={{ marginTop: \"5rem\" }}>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Layout\n","import React, {useMemo} from 'react';\n\nimport './index.scss';\n\n\nexport default function TableOfContents({item, currentHeaderUrl}) {\n    \n    const Item = useMemo(()=>{\n\n        if (currentHeaderUrl) {\n\n            return item.replace(\n                `\"${currentHeaderUrl}\"`,\n                `\"${currentHeaderUrl}\" class=\"current\"`\n            );\n        } else {\n            return item;\n        }\n    },[currentHeaderUrl]);\n\n\n    return item ? (\n\n    <div className=\"menu\">\n                <div \n                className=\"toc\"\n                dangerouslySetInnerHTML={{ __html: Item }}>\n                </div>\n    </div>\n    ) \n    : null\n}","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport \"./index.scss\"\n\nexport const Navigator = ({ pageContext }) => {\n  const { previous, next } = pageContext\n\n  return (\n    <ul className=\"navigator\">\n      <li>\n        {previous && (\n          <Link to={previous.fields.slug} rel=\"prev\">\n            ← {previous.frontmatter.title}\n          </Link>\n        )}\n      </li>\n      <li>\n        {next && (\n          <Link to={next.fields.slug} rel=\"next\">\n            {next.frontmatter.title} →\n          </Link>\n        )}\n      </li>\n    </ul>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport * as Dom from \"../../utils/dom\"\n\nconst src = \"https://utteranc.es/client.js\"\nconst branch = \"master\"\nconst DARK_THEME = \"photon-dark\"\nconst LIGHT_THEME = \"github-light\"\n\nexport const Utterances = ({ repo }) => {\n  const rootElm = React.createRef()\n\n  useEffect(() => {\n    const isDarkTheme = Dom.hasClassOfBody(\"drak\")\n    const utterances = document.createElement(\"script\")\n    const utterancesConfig = {\n      src,\n      repo,\n      branch,\n      theme: isDarkTheme ? DARK_THEME : LIGHT_THEME,\n      label: \"comment\",\n      async: true,\n      \"issue-term\": \"pathname\",\n      crossorigin: \"anonymous\",\n    }\n\n    Object.keys(utterancesConfig).forEach(configKey => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey])\n    })\n    rootElm.current.appendChild(utterances)\n  }, [])\n\n  return <div className=\"utterances\" ref={rootElm} />\n}\n","import React, { useEffect, useState } from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../layout/\"\nimport TableOfContents from \"../components/tableOfContents\"\nimport styled from \"styled-components\"\nimport { Navigator } from \"../components/navigator\"\nimport { Utterances } from \"../components/utterances\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const metaData = data.site.siteMetadata\n  const { title: postTitle, date } = post.frontmatter\n\n  const [currentUrl, setCurrentUrl] = useState(undefined)\n\n  useEffect(() => {\n    const handleScroll = () => {\n      let aboveHeaderUrl\n\n      const currentOffsetY = window.pageYOffset\n\n      const headerElements = document.querySelectorAll(`.anchor-header`)\n\n      for (const el of headerElements) {\n        const { top } = el.getBoundingClientRect()\n\n        const elTop = top + currentOffsetY\n\n        const isLast = el === headerElements[headerElements.length - 1]\n\n        if (currentOffsetY < elTop - 200) {\n          aboveHeaderUrl &&\n            setCurrentUrl(aboveHeaderUrl.split(location.origin)[1])\n          !aboveHeaderUrl && setCurrentUrl(undefined)\n          break\n        } else {\n          isLast && setCurrentUrl(el.href.split(location.origin)[1])\n          !isLast && (aboveHeaderUrl = el.href)\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", handleScroll)\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll)\n    }\n  }, [])\n\n  return (\n    <Layout location={location} title={postTitle}>\n      <div className=\"post-Wrapper\">\n        <div className=\"content\">\n          <div className=\"header-wrapper\">\n            <h1>{postTitle}</h1>\n            <div className=\"summary-wrapper\">\n              <div className=\"summary\">\n                <div className=\"info\">\n                  <TableOfContents\n                    item={data.markdownRemark.tableOfContents}\n                    currentHeaderUrl={currentUrl}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div\n            className=\"post-content\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          ></div>\n          <Navigator pageContext={pageContext} />\n\n          <Utterances repo=\"nJae94/nJae94.github.io\" />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author {\n          name\n        }\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 280)\n      html\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/algorithm.js"],"names":["data","location","posts","site","siteMetadata","title","allMarkdownRemark","nodes","useState","algorithm","setAlgorithm","tag","setTag","tags","useMemo","map","post","frontmatter","category","console","log","useEffect","filter","pathname","split","Wrapper","setTags","length","fields","slug","key","styled","div","pageQuery"],"mappings":"wPASe,sBAAyB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAEhBC,GADY,UAAAF,EAAKG,KAAKC,oBAAV,SAAwBC,MAC5BL,EAAKM,kBAAkBC,OAFA,EAIHC,mBAAS,IAApCC,EAJ8B,KAInBC,EAJmB,OAMfF,mBAAS,OAAxBG,EAN8B,KAMzBC,EANyB,KAQ/BC,EAAOC,mBACX,kBACE,IACEZ,EAAMa,KACJ,SAAAC,GAAI,MAC4B,cAA9BA,EAAKC,YAAYC,UAA4BF,EAAKC,YAAYN,UAGtE,IAiBF,OAdAQ,QAAQC,IAAIP,GAEZQ,qBAAU,WACRX,EACU,QAARC,EACIT,EAAMoB,QAAO,SAAAN,GAAI,MAAkC,cAA9BA,EAAKC,YAAYC,YACtChB,EAAMoB,QACJ,SAAAN,GAAI,MAC4B,cAA9BA,EAAKC,YAAYC,UACjBF,EAAKC,YAAYN,MAAQA,QAGlC,CAACT,EAAOS,IAGT,kBAAC,IAAD,CAAQV,SAAUA,EAAUI,MAAOJ,EAASsB,SAASC,MAAM,KAAK,IAC9D,kBAAC,IAAD,CAAKnB,MAAM,oBAEX,kBAACoB,EAAD,MACe,IAAZZ,EAAK,IAAgB,kBAAC,IAAD,CAAKA,KAAMA,EAAMa,QAASd,IAC/CH,EAAUkB,OAAS,EAClBlB,EAAUM,KAAI,SAAAC,GACZ,IAAMX,EAAQW,EAAKC,YAAYZ,OAASW,EAAKY,OAAOC,KAEpD,OAAO,kBAAC,IAAD,CAAaC,IAAKzB,EAAOA,MAAOA,EAAOW,KAAMA,OAGtD,8CAOV,IAAMS,EAAUM,IAAOC,IAAV,qEAAGD,CAAH,sEAOAE,EAAS","file":"component---src-pages-algorithm-js-c834be0e22bc2e99f060.js","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../layout\"\r\nimport SEO from \"../components/seo\"\r\nimport styled from \"styled-components\"\r\nimport MainContent from \"../components/maincontent\"\r\nimport Tag from \"../components/tag\"\r\nimport _ from \"lodash\"\r\n\r\nexport default ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  const [algorithm, setAlgorithm] = useState([])\r\n\r\n  const [tag, setTag] = useState(\"all\")\r\n\r\n  const tags = useMemo(\r\n    () =>\r\n      _.uniq(\r\n        posts.map(\r\n          post =>\r\n            post.frontmatter.category === \"algorithm\" && post.frontmatter.tag\r\n        )\r\n      ),\r\n    []\r\n  )\r\n\r\n  console.log(tags)\r\n\r\n  useEffect(() => {\r\n    setAlgorithm(\r\n      tag === \"all\"\r\n        ? posts.filter(post => post.frontmatter.category === \"algorithm\")\r\n        : posts.filter(\r\n            post =>\r\n              post.frontmatter.category === \"algorithm\" &&\r\n              post.frontmatter.tag === tag\r\n          )\r\n    )\r\n  }, [posts, tag])\r\n\r\n  return (\r\n    <Layout location={location} title={location.pathname.split(\"/\")[1]}>\r\n      <SEO title=\"algorithm posts\" />\r\n      {/* <Tag/> */}\r\n      <Wrapper>\r\n        {tags[0] !== false && <Tag tags={tags} setTags={setTag} />}\r\n        {algorithm.length > 0 ? (\r\n          algorithm.map(post => {\r\n            const title = post.frontmatter.title || post.fields.slug\r\n\r\n            return <MainContent key={title} title={title} post={post} />\r\n          })\r\n        ) : (\r\n          <div>게시글이 없습니다.</div>\r\n        )}\r\n      </Wrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n          category\r\n          tag\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}
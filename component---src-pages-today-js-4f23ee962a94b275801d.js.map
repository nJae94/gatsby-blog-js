{"version":3,"sources":["webpack:///./src/pages/today.js"],"names":["data","location","posts","allMarkdownRemark","nodes","useState","TIL","setTIL","tag","setTag","console","log","tags","useMemo","map","post","frontmatter","category","useEffect","filter","title","pathname","split","Wrapper","setTags","fields","slug","key","styled","div","pageQuery"],"mappings":"uPASe,sBAAyB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChBC,EAAQF,EAAKG,kBAAkBC,MADA,EAGfC,mBAAS,IAAxBC,EAH8B,KAGzBC,EAHyB,OAKfF,mBAAS,OAAxBG,EAL8B,KAKzBC,EALyB,KAOrCC,QAAQC,IAAIH,GAEZ,IAAMI,EAAOC,mBACX,kBACE,IACEX,EAAMY,KACJ,SAAAC,GAAI,MAAkC,QAA9BA,EAAKC,YAAYC,UAAsBF,EAAKC,YAAYR,UAGtE,IAgBF,OAdAE,QAAQC,IAAIC,GAEZM,qBAAU,WACRX,EACU,QAARC,EACIN,EAAMiB,QAAO,SAAAJ,GAAI,MAAkC,QAA9BA,EAAKC,YAAYC,YACtCf,EAAMiB,QACJ,SAAAJ,GAAI,MAC4B,QAA9BA,EAAKC,YAAYC,UACjBF,EAAKC,YAAYR,MAAQA,QAGlC,CAACN,EAAOM,IAGT,kBAAC,IAAD,CAAQP,SAAUA,EAAUmB,MAAOnB,EAASoB,SAASC,MAAM,KAAK,IAC9D,kBAAC,IAAD,CAAKF,MAAM,cAEX,kBAACG,EAAD,KACE,kBAAC,IAAD,CAAKX,KAAMA,EAAMY,QAASf,IACzBH,EAAIQ,KAAI,SAAAC,GACP,IAAMK,EAAQL,EAAKC,YAAYI,OAASL,EAAKU,OAAOC,KAEpD,OAAO,kBAAC,IAAD,CAAaC,IAAKP,EAAOA,MAAOA,EAAOL,KAAMA,UAO9D,IAAMQ,EAAUK,IAAOC,IAAV,qEAAGD,CAAH,sEAOAE,EAAS","file":"component---src-pages-today-js-4f23ee962a94b275801d.js","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../layout\"\nimport SEO from \"../components/seo\"\nimport styled from \"styled-components\"\nimport MainContent from \"../components/maincontent\"\nimport Tag from \"../components/tag\"\nimport _ from \"lodash\"\n\nexport default ({ data, location }) => {\n  const posts = data.allMarkdownRemark.nodes\n\n  const [TIL, setTIL] = useState([])\n\n  const [tag, setTag] = useState(\"all\")\n\n  console.log(tag)\n\n  const tags = useMemo(\n    () =>\n      _.uniq(\n        posts.map(\n          post => post.frontmatter.category === \"TIL\" && post.frontmatter.tag\n        )\n      ),\n    []\n  )\n  console.log(tags)\n\n  useEffect(() => {\n    setTIL(\n      tag === \"all\"\n        ? posts.filter(post => post.frontmatter.category === \"TIL\")\n        : posts.filter(\n            post =>\n              post.frontmatter.category === \"TIL\" &&\n              post.frontmatter.tag === tag\n          )\n    )\n  }, [posts, tag])\n\n  return (\n    <Layout location={location} title={location.pathname.split(\"/\")[1]}>\n      <SEO title=\"TIL posts\" />\n      {/* <Tag/> */}\n      <Wrapper>\n        <Tag tags={tags} setTags={setTag} />\n        {TIL.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return <MainContent key={title} title={title} post={post} />\n        })}\n      </Wrapper>\n    </Layout>\n  )\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          category\n          tag\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}